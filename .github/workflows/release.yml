name: Release

on:
  push:
    # Only run on tag pushes like v1.2.3
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  # ───────────────────────────────────────────────────────────────────────────
  # 1. Build & Upload Artifacts (matrix)
  # ───────────────────────────────────────────────────────────────────────────
  build:
    name: Build Binaries & Upload Artifacts
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            ext: ""
          - os: macos-latest
            target: x86_64-apple-darwin
            ext: ""
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            ext: ".exe"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Create dist directory
        run: mkdir -p dist

      - name: Copy binary (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          cp target/${{ matrix.target }}/release/favis${{ matrix.ext }} \
             dist/favis-${{ matrix.target }}${{ matrix.ext }}

      - name: Copy binary (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Copy-Item -Path "target\\${{ matrix.target }}\\release\\favis${{ matrix.ext }}" `
                    -Destination "dist\\favis-${{ matrix.target }}${{ matrix.ext }}"

      - name: Generate SHA256 checksum (Linux)
        if: runner.os == 'Linux'
        working-directory: dist
        run: |
          sha256sum favis-${{ matrix.target }}${{ matrix.ext }} \
            > favis-${{ matrix.target }}${{ matrix.ext }}.sha256

      - name: Generate SHA256 checksum (macOS)
        if: runner.os == 'macOS'
        working-directory: dist
        run: |
          shasum -a 256 favis-${{ matrix.target }}${{ matrix.ext }} \
            > favis-${{ matrix.target }}${{ matrix.ext }}.sha256

      - name: Generate SHA256 checksum (Windows)
        if: runner.os == 'Windows'
        working-directory: dist
        shell: pwsh
        run: |
          $file = "favis-${{ matrix.target }}${{ matrix.ext }}"
          $hash = (Get-FileHash -Algorithm SHA256 $file).Hash.ToLower()
          "$hash *$file" | Out-File -Encoding utf8 "$file.sha256"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.target }}
          path: dist/

  # ───────────────────────────────────────────────────────────────────────────
  # 2. Publish Release & Upload Assets
  # ───────────────────────────────────────────────────────────────────────────
  publish:
    name: Publish Release & Upload Assets
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-x86_64-unknown-linux-gnu
          path: dist-linux

      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-x86_64-apple-darwin
          path: dist-macos

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-x86_64-pc-windows-msvc
          path: dist-windows

      - name: Publish Release & Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          token:                ${{ secrets.GITHUB_TOKEN }}
          tag_name:             ${{ github.ref_name }}
          name:                 ${{ github.ref_name }}
          make_latest:          true
          files: |
            dist-linux/*
            dist-macos/*
            dist-windows/*
          generate_release_notes: true
          fail_on_unmatched_files: true
