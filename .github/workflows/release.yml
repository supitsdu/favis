name: Release

on:
  push:
    # Only run on tag pushes like v1.2.3
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-and-publish:
    name: Build & Publish Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            ext: ""
          - os: macos-latest
            target: x86_64-apple-darwin
            ext: ""
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            ext: ".exe"

    steps:
      # 1. Checkout
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Rust toolchain
      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      # 3. Build
      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      # 4. Prepare dist/
      - name: Create dist directory
        run: mkdir -p dist

      - name: Copy & rename binary (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          cp target/${{ matrix.target }}/release/favis${{ matrix.ext }} \
             dist/favis-${{ matrix.target }}${{ matrix.ext }}

      - name: Copy & rename binary (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Copy-Item -Path "target\${{ matrix.target }}\release\favis${{ matrix.ext }}" `
                    -Destination "dist\favis-${{ matrix.target }}${{ matrix.ext }}"

      # 5. Checksums
      - name: Generate SHA256 checksum (Linux)
        if: runner.os == 'Linux'
        working-directory: dist
        run: sha256sum favis-${{ matrix.target }}${{ matrix.ext }} \
                      > favis-${{ matrix.target }}${{ matrix.ext }}.sha256

      - name: Generate SHA256 checksum (macOS)
        if: runner.os == 'macOS'
        working-directory: dist
        run: shasum -a 256 favis-${{ matrix.target }}${{ matrix.ext }} \
                      > favis-${{ matrix.target }}${{ matrix.ext }}.sha256

      - name: Generate SHA256 checksum (Windows)
        if: runner.os == 'Windows'
        working-directory: dist
        shell: pwsh
        run: |
          $file = "favis-${{ matrix.target }}${{ matrix.ext }}"
          $hash = (Get-FileHash -Algorithm SHA256 $file).Hash.ToLower()
          "$hash *$file" | Out-File -Encoding utf8 "$file.sha256"

      # 6. Create or Update Release & Upload
      - name: Publish Release & Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          # token supports create or update of existing release
          token:        ${{ secrets.GITHUB_TOKEN }}
          tag_name:     ${{ github.ref_name }}
          name:         ${{ github.ref_name }}
          make_latest:  true
          files: |
            dist/favis-${{ matrix.target }}${{ matrix.ext }}
            dist/favis-${{ matrix.target }}${{ matrix.ext }}.sha256
          generate_release_notes: true
          fail_on_unmatched_files: true
