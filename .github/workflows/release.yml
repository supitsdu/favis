name: Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

permissions:
  # Allow creating releases and uploading assets
  contents: write

jobs:
  # ───────────────────────────────────────────────────────────────────────────
  # 1. Create the GitHub Release (runs once per tag push)
  # ───────────────────────────────────────────────────────────────────────────
  create:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Release
        id: create
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name:     ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft:        false
          prerelease:   false

  # ───────────────────────────────────────────────────────────────────────────
  # 2. Build & Upload Assets (matrix)
  # ───────────────────────────────────────────────────────────────────────────
  build:
    name: Build & Upload Assets
    needs: create
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            ext: ""
          - os: macos-latest
            target: x86_64-apple-darwin
            ext: ""
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            ext: ".exe"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare artifact directory
        run: mkdir -p dist

      - name: Copy & rename binary
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cp "target\\${{ matrix.target }}\\release\\favis${{ matrix.ext }}" "dist/favis-${{ matrix.target }}${{ matrix.ext }}"
          else
            cp target/${{ matrix.target }}/release/favis${{ matrix.ext }} dist/favis-${{ matrix.target }}${{ matrix.ext }}
          fi

      - name: Generate SHA256 checksum
        working-directory: dist
        shell: bash
        run: sha256sum favis-${{ matrix.target }}${{ matrix.ext }} > favis-${{ matrix.target }}${{ matrix.ext }}.sha256

      - name: Upload binary asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url:        ${{ needs.create.outputs.upload_url }}
          asset_path:        dist/favis-${{ matrix.target }}${{ matrix.ext }}
          asset_name:        favis-${{ matrix.target }}${{ matrix.ext }}
          asset_content_type: application/octet-stream

      - name: Upload checksum asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url:        ${{ needs.create.outputs.upload_url }}
          asset_path:        dist/favis-${{ matrix.target }}${{ matrix.ext }}.sha256
          asset_name:        favis-${{ matrix.target }}${{ matrix.ext }}.sha256
          asset_content_type: text/plain
